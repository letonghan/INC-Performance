
pr:
  - main

pool: wenjiao-test

stages:
  - stage: pylint
    jobs:
      - job: pylint_test
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                pip install pylint==2.12.1
                # pip install intel-tensorflow
                # # python -m pylint -f json --disable=R,C,W,E1129 --enable=line-too-long --max-line-length=120 --extension-pkg-whitelist=numpy --ignored-classes=TensorProto,NodeProto --ignored-modules=tensorflow,torch,torch.quantization,torch.tensor,torchvision,mxnet,onnx,onnxruntime ./neural_compressor > ${WORKSPACE}/lpot-pylint.json
                # # exit_code=$?
                # # if [ ${exit_code} -ne 0 ] ; then
                # #     echo "PyLint exited with non-zero exit code."; exit 1
                # # fi
                # # exit 0
  - stage: bandit
    jobs:
      - job: bandit_test
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                pip install bandit
                # python -m bandit -r -lll -iii neural_compressor > ${WORKSPACE}/lpot-bandit.log
                # exit_code=$?
                # if [ ${exit_code} -ne 0 ] ; then
                #     echo "Bandit exited with non-zero exit code."; exit 1
                # fi
                # exit 0
  - stage: pyspelling
    jobs:
      - job: pyspelling_test
        steps:
          - task: Bash@3
            inputs:
              targetType: "inline"
              script: |
                pip install pyspelling
                # Update paths to validation and lpot repositories
                # VAL_REPO=${WORKSPACE}
                # sed -i "s|\${VAL_REPO}|$VAL_REPO|g" ${VAL_REPO}/pyspelling_conf.yaml
                # sed -i "s|\${LPOT_REPO}|$REPO_DIR|g" ${VAL_REPO}/pyspelling_conf.yaml
                # echo "Modified config:"
                # cat ${VAL_REPO}/pyspelling_conf.yaml
                # pyspelling -c ${VAL_REPO}/pyspelling_conf.yaml > ${WORKSPACE}/pyspelling_output.log
                # exit_code=$?
                # if [ ${exit_code} -ne 0 ] ; then
                #     echo "Pyspelling exited with non-zero exit code."; exit 1
                # fi
                # exit 0

